{"version":3,"sources":["Notes/do.wav","Notes/re.wav","Notes/mi.wav","Notes/fa.wav","Notes/sol.wav","Notes/la.wav","Notes/si.wav","App.js","index.js"],"names":["App","notas","nombres","link","require","sostenido","useState","sonando","setSonando","setTimeout","className","map","nota","onClick","Audio","default","play","handleClickNote","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAA,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,iC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,qGCwG1BA,MArGf,WACE,IAAMC,EAAQ,CACZ,CACEC,QAAS,KACTC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,QAAS,KACTC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,QAAS,KACTC,KAAMC,EAAQ,KAEhB,CACEF,QAAS,KACTC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,QAAS,MACTC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,QAAS,KACTC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,QAAS,KACTC,KAAMC,EAAQ,MAajB,EAA0BE,mBAAS,GAAnC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAaC,OALAC,YAAW,WACTD,EAAW,MACX,KAIA,gCACE,sBAAKE,UAAU,SAAf,UACE,iDAECH,GAAW,oBAAIG,UAAU,eAAd,SAA8BH,OAG5C,qBAAKG,UAAU,YAAf,SACGT,EAAMU,KAAI,SAAAC,GAAI,OACb,qBAEEF,UAAS,eAAUH,IAAYK,EAAKV,SAAW,WAC/CW,QAAS,kBApCG,SAAAD,GACtBJ,EAAWI,EAAKV,SACD,IAAIY,MAAMF,EAAKT,KAAKY,SAC5BC,OAiCkBC,CAAgBL,IAHjC,SAKGA,EAAKP,WAAa,qBAAKK,UAAU,WAJb,IAAhBQ,KAAKC,mBCpExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.597a9ff5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/do.a2508143.wav\";","export default __webpack_public_path__ + \"static/media/re.419c7811.wav\";","export default __webpack_public_path__ + \"static/media/mi.51e5702c.wav\";","export default __webpack_public_path__ + \"static/media/fa.fdf4ed24.wav\";","export default __webpack_public_path__ + \"static/media/sol.e5e79dda.wav\";","export default __webpack_public_path__ + \"static/media/la.5351f634.wav\";","export default __webpack_public_path__ + \"static/media/si.42883966.wav\";","import {useState} from 'react';\nimport './App.sass';\n\nfunction App() {\n  const notas = [\n    {\n      nombres: 'Do',\n      link: require('./Notes/do.wav'),\n      sostenido: true\n    },\n    {\n      nombres: 'Re',\n      link: require('./Notes/re.wav'),\n      sostenido: true\n    },\n    {\n      nombres: 'Mi',\n      link: require('./Notes/mi.wav'),\n    },\n    {\n      nombres: 'Fa',\n      link: require('./Notes/fa.wav'),\n      sostenido: true\n    },\n    {\n      nombres: 'Sol',\n      link: require('./Notes/sol.wav'),\n      sostenido: true\n    },\n    {\n      nombres: 'La',\n      link: require('./Notes/la.wav'),\n      sostenido: true\n    },\n    {\n      nombres: 'Si',\n      link: require('./Notes/si.wav'),\n    },\n  ]\n\n  const handleClickNote = nota => {\n    setSonando(nota.nombres);\n    const sonido = new Audio(nota.link.default);\n    sonido.play();\n   }\n  //  Hook UseState\n  //  1.- Variable inicial\n  //  2.- Funcion que se dedique a actualizar la variable\n  // 3.- El valor inicial de esa varibale\n   const [click, setClick] = useState(0);\n   const [sonando, setSonando] = useState('');\n  \n  //  let click = 0;\n  \n   const handlerClickCount = () => {\n     setClick(click + 1);\n    }\n  \n    setTimeout(() =>{\n      setSonando('')\n    },300)\n\n  \n    return (\n      <div>\n        <div className=\"titulo\">\n          <h1>Piano con React</h1>\n          {/* <h2>Hecho por Male ðŸ˜€</h2> */}\n          {sonando && <h3 className=\"esta-sonando\">{sonando}</h3>}\n          {/* <button onClick={handlerClickCount}>Has dado {click} clicks </button> */}\n        </div>\n        <div className=\"container\">\n          {notas.map(nota => (\n            <div\n              key={Math.random() * 100}\n              className={`nota ${sonando === nota.nombres && 'sonando'}`}\n              onClick={() => handleClickNote(nota)}\n            >\n              {nota.sostenido && <div className=\"negra\"></div>}\n              {/* {nota.sostenido ? <div className=\"negra\"></div> : null} */}\n            </div>\n          ))}\n          {/* <div className=\"nota\" onClick={handleClickNote}>\n            <div className=\"negra\"></div>\n          </div>\n          <div className=\"nota\">\n            <div className=\"negra\"></div>\n          </div>\n          <div className=\"nota\"></div>\n          <div className=\"nota\">\n            <div className=\"negra\"></div>\n          </div>\n          <div className=\"nota\">\n            <div className=\"negra\"></div>\n          </div>\n          <div className=\"nota\">\n            <div className=\"negra\"></div>\n          </div>\n          <div className=\"nota\"></div> */}\n        </div>\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}